{"version":3,"sources":["reducers/boardReducer.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/activityReducer.js","reducers/imageReducer.js","store/configureStore.js","actions/actions.js","actions/actionCreators/boardActions.js","actions/actionCreators/activityActions.js","components/InputCard.js","components/Header.js","components/Boards.js","App.js","actions/actionCreators/cardActions.js","components/Card.js","ordering/ordering.js","components/AddItem.js","actions/actionCreators/listActions.js","components/List.js","components/BoardHeader.js","components/Activities.js","components/Hr.js","components/MenuHeader.js","actions/actionCreators/imageActions.js","components/Background.js","components/SideMenu.js","components/Board.js","routers/AppRouter.js","index.js"],"names":["initialState","loading","boards","currBoard","listLoading","lists","cardLoading","cards","activities","images","rootReducer","combineReducers","state","action","type","payload","error","board","newBoard","boardsCopy","targetIndex","findIndex","_id","boardPrev","index","splice","list","listsCopy","listPrev","listError","card","cardsCopy","cardPrev","cardError","activity","activitiesLog","activityError","map","img","id","thumb","urls","full","user","username","link","links","html","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","BASE_URL","process","updateBoardById","params","dispatch","axios","patch","then","res","data","catch","e","message","createNewActivity","post","response","status","useStyles","makeStyles","theme","margin","spacing","wordWrap","padding","props","boxShadow","btn","marginLeft","backgroundColor","color","textTransform","opacity","icon","listBackground","paddingTop","borderRadius","width","InputItem","value","changedHandler","itemAdded","closeHandler","btnText","placeholder","classes","className","Paper","InputBase","onChange","multiline","fullWidth","autoFocus","onBlur","Button","variant","onClick","IconButton","header","marginBottom","fontWeight","fontSize","textAlign","fontFamily","position","zIndex","trellis","display","cursor","Header","imageUrls","height","menuContainer","flexWrap","title","top","left","overflow","lineHeight","Boards","useState","boardTitle","setBoardTitle","useSelector","showInput","setShowInput","useDispatch","useEffect","get","text","boardId","style","key","image","backgroundImage","backgroundSize","backgroundRepeat","preventDefault","location","href","name","marginTop","target","App","updateCardById","Card","task","editable","setEditable","setTitle","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","minHeight","onFocus","val","right","delete","midString","prev","next","p","n","pos","str","length","charCodeAt","slice","String","fromCharCode","Math","ceil","add","justifyContent","AddItem","handleClick","updateListById","root","scroll","maxHeight","overflowX","minWidth","wrapper","Column","column","tasks","cardTitle","setCardTitle","listTitle","setListTitle","addCardFlag","setAddCardFlag","addFlag","useRef","handleChange","submitHandler","totalTasks","postCardReq","listId","order","handleAddition","current","closeButtonHandler","updateListTitle","elevation","droppableId","droppableProps","container","BoardHeader","showEditable","paddingLeft","timestamp","Activities","Date","toLocaleString","setDt","secTimer","setInterval","clearInterval","intialActivity","timestampString","date","createdAt","moment","fromNow","userName","split","activityText","replace","includes","subtract","calendar","format","hr","border","Hr","paddingRight","close","MenuHeader","page","floor","random","float","colors","Background","setColorBackground","showColor","setShowColor","showImage","setShowImage","results","bind","positon","marginRight","textDecoration","showMenu","transition","menu","SideMenu","setBackground","setShowMenu","showBackground","setShowBackground","url","paddingBottom","overflowY","listContainer","alignItems","Board","useParams","initialData","setInitialData","initDone","setInitDone","addListFlag","setAddListFlag","setColor","setUrl","undefined","fetchBoardById","fetchListsFromBoard","fetchsCardsFromBoard","fetchActivitiesFromBoard","_","isEmpty","document","prevState","columns","columnOrder","getTaskIds","filteredTasks","filter","sortedTasks","orderBy","taskIds","forEach","push","totalLists","postListReq","to","onDragEnd","result","newOrder","console","log","destination","source","startList","endList","recentActivity","deleteActivityById","startTaskIds","Array","from","newStartList","destinationTask","endTaskIds","newEndList","newData","newTaskIds","newColumn","listOrder","newListOrder","destinationColumn","direction","columnId","taskId","background","NotFound","AppRouter","path","exact","component","JSX","store","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fcf46f79.chunk.js","sourcesContent":["import * as ACTIONS from '../actions/actions'\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    boards: [],\r\n    currBoard: {},\r\n}\r\nexport const boardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST_BOARD:\r\n            return { ...state, loading: true }\r\n        case ACTIONS.GET_BOARDS:\r\n            return { ...state, loading: false, boards: action.payload.boards }\r\n        case ACTIONS.GET_BOARD_BY_ID:\r\n            return { ...state, loading: false, currBoard: action.payload.currBoard }\r\n        case ACTIONS.ERROR_BOARD:\r\n            return { ...state, loading: false, error: action.payload.error, boards: [] }\r\n        case ACTIONS.ADD_BOARD:\r\n            return { ...state, loading: false, boards: [...state.boards, action.payload.board], newBoard: action.payload.board }\r\n        case ACTIONS.UPDATE_BOARD:\r\n            const boardsCopy = [...state.boards]\r\n            const targetIndex = boardsCopy.findIndex(board => board._id === action.payload.board._id)\r\n            boardsCopy[targetIndex] = action.payload.board\r\n            return { ...state, boards: boardsCopy, currBoard: action.payload.board, loading: false }\r\n        case ACTIONS.DELETE_BOARD:\r\n            const boardPrev = [...state.boards]\r\n            const index = boardPrev.findIndex(board => board._id === action.payload.board._id)\r\n            boardPrev.splice(index, 1)\r\n            return { ...state, boards: boardPrev, loading: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as ACTIONS from '../actions/actions'\r\n\r\nconst initialState = {\r\n    listLoading: true,\r\n    lists: []\r\n}\r\nexport const listsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST_LIST:\r\n            return { ...state, listLoading: true }\r\n        case ACTIONS.GET_LISTS:\r\n            return { ...state, listLoading: false, lists: action.payload.lists }\r\n        case ACTIONS.ADD_LIST:\r\n            return { ...state, lists: [...state.lists, action.payload.list] }\r\n        case ACTIONS.UPDATE_LIST:\r\n            const listsCopy = [...state.lists]\r\n            const targetIndex = listsCopy.findIndex(list => list._id === action.payload.list._id)\r\n            listsCopy[targetIndex] = action.payload.list\r\n            return { ...state, lists: listsCopy, listLoading: false }\r\n        case ACTIONS.DELETE_LIST:\r\n            const listPrev = [...state.lists]\r\n            const index = listPrev.findIndex(list => list._id === action.payload.list._id)\r\n            listPrev.splice(index, 1)\r\n            return { ...state, lists: listPrev, listLoading: false }\r\n        case ACTIONS.ERROR_LIST:\r\n            return { ...state, listLoading: false, listError: action.payload.error }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import * as ACTIONS from '../actions/actions'\r\n\r\nconst initialState = {\r\n    cardLoading: true,\r\n    cards: []\r\n}\r\nexport const cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST_CARD:\r\n            return { ...state, cardLoading: true }\r\n        case ACTIONS.GET_CARDS:\r\n            return { ...state, cardLoading: false, cards: action.payload.cards }\r\n        case ACTIONS.ADD_CARD:\r\n            return { ...state, cards: [...state.cards, action.payload.card] }\r\n        case ACTIONS.UPDATE_CARD:\r\n            const cardsCopy = [...state.cards]\r\n            const targetIndex = cardsCopy.findIndex(card => card._id === action.payload.card._id)\r\n            cardsCopy[targetIndex] = action.payload.card\r\n            return { ...state, cards: cardsCopy, cardLoading: false }\r\n        case ACTIONS.DELETE_CARD:\r\n            const cardPrev = [...state.cards]\r\n            const index = cardPrev.findIndex(card => card._id === action.payload.card._id)\r\n            cardPrev.splice(index, 1)\r\n            return { ...state, cards: cardPrev, cardLoading: false }\r\n        case ACTIONS.ERROR_CARD:\r\n            return { ...state, cardLoading: false, cardError: action.payload.error }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as ACTIONS from '../actions/actions'\r\n\r\nconst initialState = {\r\n    activities: []\r\n}\r\nexport const activityReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.GET_ACTIVITIES:\r\n            return { ...state, activities: action.payload.activities }\r\n        case ACTIONS.ADD_ACTIVITY:\r\n            return { ...state, activities: [...state.activities, action.payload.activity] }\r\n        case ACTIONS.DELETE_ACTIVITY:\r\n            const activitiesLog = state.activities\r\n            const index = activitiesLog.findIndex(activity => activity._id === action.payload.activity._id)\r\n            activitiesLog.splice(index, 1)\r\n            return { ...state, activities: [...state.activitiesLog] }\r\n        case ACTIONS.ERROR_ACTIVITY:\r\n            return { ...state, activityError: action.payload.error }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as ACTIONS from '../actions/actions'\r\n\r\nconst initialState = {\r\n    images: []\r\n}\r\nexport const imageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.GET_URLS:\r\n            const images = action.payload.images.map(img => (\r\n                {\r\n                    id: img.id,\r\n                    thumb: img.urls.thumb,\r\n                    full: img.urls.full,\r\n                    user: {\r\n                        username: img.user.username,\r\n                        link: img.user.links.html\r\n                    }\r\n                }))\r\n            return { images }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { boardReducer } from '../reducers/boardReducer'\r\nimport { listsReducer } from '../reducers/listsReducer'\r\nimport { cardsReducer } from '../reducers/cardsReducer'\r\nimport { activityReducer } from '../reducers/activityReducer'\r\nimport { imageReducer } from '../reducers/imageReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    boards: boardReducer,\r\n    lists: listsReducer,\r\n    cards: cardsReducer,\r\n    activities: activityReducer,\r\n    images: imageReducer\r\n})\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n","// action types\r\nexport const MAKE_REQUEST_BOARD = 'makeRequestBoard'\r\nexport const MAKE_REQUEST_LIST = 'makeRequestList'\r\nexport const MAKE_REQUEST_CARD = 'makeRequestCard'\r\nexport const GET_BOARDS = 'getBoards'\r\nexport const GET_LISTS = 'getLists'\r\nexport const GET_CARDS = 'getCards'\r\nexport const GET_BOARD_BY_ID = 'getBoardById'\r\nexport const GET_LIST_BY_ID = 'getListById'\r\nexport const GET_CARD_BY_ID = 'getCardById'\r\nexport const ERROR_BOARD = 'errorBoard'\r\nexport const ERROR_LIST = 'errorList'\r\nexport const ERROR_CARD = 'errorCard'\r\nexport const POST_REQUEST_BOARD = 'postRequestBoard'\r\nexport const POST_REQUEST_LIST = 'postRequestList'\r\nexport const POST_REQUEST_CARD = 'postRequestCard'\r\nexport const ADD_CARD = 'addCard'\r\nexport const ADD_BOARD = 'addBoard'\r\nexport const ADD_LIST = 'addList'\r\nexport const VALIDATION_ERROR_BOARD = 'validationErrorBoard'\r\nexport const VALIDATION_ERROR_LIST = 'validationErrorList'\r\nexport const VALIDATION_ERROR_CARD = 'validationErrorCard'\r\nexport const UPDATE_CARD = 'updateCard'\r\nexport const UPDATE_LIST = 'updateList'\r\nexport const UPDATE_BOARD = 'updateBoard'\r\nexport const GET_ACTIVITIES = 'getActivities'\r\nexport const ADD_ACTIVITY = 'addActivity'\r\nexport const ERROR_ACTIVITY = 'errorActivity'\r\nexport const DELETE_ACTIVITY = 'deleteActivity'\r\nexport const DELETE_CARD = 'deleteCard'\r\nexport const DELETE_LIST = 'deleteList'\r\nexport const DELETE_BOARD = 'deleteBoard'\r\nexport const VALIDATION_ERROR_ACTIVITY = 'validationErrorActivity'\r\nexport const GET_URLS = 'getUrls'\r\n\r\n","import axios from 'axios'\r\nimport * as ACTIONS from '../actions'\r\n\r\nconst BASE_URL = `${process.env.REACT_APP_HOME_URL}/api/boards/`\r\nexport const fetchAllBoards = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST_BOARD })\r\n        axios.get(BASE_URL).then(res => {\r\n            dispatch({ type: ACTIONS.GET_BOARDS, payload: { boards: res.data } })\r\n        }).catch(e => {\r\n            dispatch({ type: ACTIONS.ERROR_BOARD, payload: { error: e } })\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchBoardById = (id) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST_BOARD })\r\n        axios.get(BASE_URL + id).then(res => {\r\n            dispatch({ type: ACTIONS.GET_BOARD_BY_ID, payload: { currBoard: res.data } })\r\n        }).catch(e => {\r\n            dispatch({ type: ACTIONS.ERROR_BOARD, payload: { error: e } })\r\n        })\r\n    }\r\n}\r\n\r\nexport const createNewBoard = (params) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.POST_REQUEST_BOARD })\r\n        axios.post(BASE_URL, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.ADD_BOARD, payload: { board: res.data } })\r\n            }).catch(e => {\r\n                if (e.message === \"Network Error\")\r\n                    dispatch({ type: ACTIONS.ERROR_BOARD, payload: { error: e } })\r\n                else if (e.response.status === 422)\r\n                    dispatch({ type: ACTIONS.VALIDATION_ERROR_BOARD })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateBoardById = (id, params) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST_BOARD })\r\n        axios.patch(BASE_URL + id, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.UPDATE_BOARD, payload: { board: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_BOARD, payload: { error: e.message } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteBoardById = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete(BASE_URL + id)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.DELETE_BOARD, payload: { board: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_BOARD, payload: { error: e.message } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchListsFromBoard = (id) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST_LIST })\r\n        axios.get(BASE_URL + id + '/lists')\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.GET_LISTS, payload: { lists: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_LIST, payload: { error: e } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchsCardsFromBoard = (id) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST_CARD })\r\n        axios.get(BASE_URL + id + '/cards')\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.GET_CARDS, payload: { cards: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_CARD, payload: { error: e.message } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchActivitiesFromBoard = (id) => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL + id + '/activities')\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.GET_ACTIVITIES, payload: { activities: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_ACTIVITY, payload: { error: e } })\r\n            })\r\n    }\r\n}","import axios from 'axios'\r\nimport * as ACTIONS from '../actions'\r\n\r\nconst BASE_URL = `${process.env.REACT_APP_HOME_URL}/api/activities/`\r\n\r\n\r\nexport const createNewActivity = (params) => {\r\n    return (dispatch) => {\r\n        axios.post(BASE_URL, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.ADD_ACTIVITY, payload: { activity: res.data } })\r\n            }).catch(e => {\r\n                if (e.message === \"Network Error\")\r\n                    dispatch({ type: ACTIONS.ERROR_ACTIVITY, payload: { error: e } })\r\n                else if (e.response.status === 422)\r\n                    dispatch({ type: ACTIONS.VALIDATION_ERROR_ACTIVITY })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteActivityById = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete(BASE_URL + id)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.DELETE_ACTIVITY, payload: { activity: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_ACTIVITY, payload: { error: e } })\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { Paper, InputBase, makeStyles, Button, IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(0.2, 1, 0.09, 1),\r\n        // width: props => props.type === 'board' ? '120px' : '230px',\r\n        wordWrap: 'break-word',\r\n        padding: props => props.type === 'list' ? theme.spacing(0.5, 1.5, 0.5, 1.5) : theme.spacing(1, 1, 3.5, 2),\r\n        boxShadow: props => props.type === 'list' ? 'inset 0 0 0 2px #0079bf' :\r\n            '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\r\n    },\r\n    btn: {\r\n        marginLeft: theme.spacing(1),\r\n        backgroundColor: '#5aac44',\r\n        color: 'white',\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            opacity: 1.6,\r\n            backgroundColor: '#61BD4F',\r\n        }\r\n    },\r\n    icon: {\r\n        opacity: 0.6,\r\n        color: 'black',\r\n        '&:hover': {\r\n            opacity: 1,\r\n        }\r\n    },\r\n    listBackground: {\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: props => props.marginLeft ? theme.spacing(1) : theme.spacing(0),\r\n        paddingTop: props => props.type === 'list' ? theme.spacing(1) : 'inherit',\r\n        borderRadius: theme.spacing(0.5),\r\n    },\r\n    width: props => ({\r\n        width: props.width\r\n    })\r\n}))\r\n\r\nexport default function InputItem({ value, changedHandler, itemAdded, closeHandler, width, type, btnText, placeholder, marginLeft }) {\r\n    const classes = useStyles({ type, width, marginLeft })\r\n    const handleBlur = () => {\r\n        itemAdded()\r\n        closeHandler()\r\n    }\r\n    return (\r\n        <div className={classes.listBackground}>\r\n            <Paper className={`${classes.card} ${classes.width}`}>\r\n                <InputBase\r\n                    onChange={changedHandler}\r\n                    multiline\r\n                    fullWidth\r\n                    value={value}\r\n                    autoFocus\r\n                    placeholder={placeholder}\r\n                    onBlur={handleBlur} />\r\n            </Paper>\r\n            <Button\r\n                className={classes.btn}\r\n                variant='contained'\r\n                onClick={itemAdded}>{btnText}</Button>\r\n            <IconButton className={classes.icon} onClick={closeHandler}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        padding: theme.spacing(0.3, 0.3, 0.3, 0.3),\r\n        marginBottom: theme.spacing(1),\r\n        backgroundColor: 'hsla(0,0%,100%,.24)',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n        fontSize: '23px',\r\n        textAlign: 'center',\r\n        fontFamily: 'Pacifico',\r\n        position: 'fixed',\r\n        width: '100%',\r\n        zIndex: 1\r\n    },\r\n    trellis: {\r\n        zIndex: 100,\r\n        opacity: 0.7,\r\n        color: 'black',\r\n        display: 'inline-block',\r\n        '&:hover': {\r\n            opacity: 1,\r\n            cursor: 'pointer',\r\n        },\r\n        \r\n        \r\n    }\r\n}))\r\n\r\nexport default function Header() {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.header}>\r\n            <div className={classes.trellis}\r\n            >Trellis</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchAllBoards, createNewBoard } from '../actions/actionCreators/boardActions'\r\nimport { createNewActivity } from '../actions/actionCreators/activityActions'\r\nimport InputCard from './InputCard'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport Header from './Header'\r\n\r\nconst imageUrls = {\r\n    thumb: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE1NzgwNn0',\r\n    full: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE1NzgwNn0'\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        height: '90px',\r\n        width: '12.8%',\r\n        margin: theme.spacing(1),\r\n        borderRadius: theme.spacing(0.7),\r\n        '&:hover': {\r\n            opacity: 0.7,\r\n            cursor: 'pointer'\r\n        },\r\n        position: 'relative'\r\n    },\r\n    menuContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginLeft: theme.spacing(30)\r\n    },\r\n    title: {\r\n        position: 'absolute',\r\n        top: theme.spacing(0),\r\n        left: theme.spacing(0),\r\n        width: '100%',\r\n        wordWrap: 'break-word',\r\n        overflow: 'hidden',\r\n        lineHeight: '1.5em',\r\n        height: '3em',\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        padding: theme.spacing(0.7),\r\n    }\r\n}))\r\n\r\nexport default function Boards() {\r\n    const classes = useStyles()\r\n    const [boardTitle, setBoardTitle] = useState('')\r\n    const { boards, newBoard } = useSelector(state => state.boards)\r\n    const [showInput, setShowInput] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllBoards())\r\n    }, [dispatch])\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        setBoardTitle(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (newBoard) {\r\n            dispatch(createNewActivity({\r\n                text: 'User created this board',\r\n                boardId: (newBoard._id)\r\n            }))\r\n        }\r\n    }, [newBoard, dispatch])\r\n\r\n\r\n    const submitHandler = () => {\r\n        if (boardTitle === '')\r\n            return\r\n\r\n        const postBoardReq = {\r\n            name: boardTitle,\r\n            image: {\r\n                color: 'white',\r\n                thumb: imageUrls.thumb,\r\n                full: imageUrls.full\r\n            }\r\n        }\r\n        dispatch(createNewBoard(postBoardReq))\r\n        setBoardTitle('')\r\n        setShowInput(false)\r\n    }\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#FAFBFC' }}>\r\n            <Header />\r\n            <div style={{ paddingTop: '80px' }}>\r\n                <div className={classes.menuContainer}>\r\n                    { boards.map(board => {\r\n                        return (\r\n                            < div className={classes.card}\r\n                                key={board._id}\r\n                                style={{\r\n                                    backgroundColor: `${board.image.color}`,\r\n                                    backgroundImage: `url(${board.image.thumb})`,\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundRepeat: 'no-repeat',\r\n                                }}\r\n                                onClick={(e) => {\r\n                                    e.preventDefault()\r\n                                    window.location.href = `/b/${board._id}/${board.name}`\r\n                                }}\r\n                            >\r\n                                <div className={classes.title} >\r\n                                    {board.name}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    {!showInput && <div className={classes.card}\r\n                        style={{ backgroundColor: '#E7E9ED' }}\r\n                        onClick={() => setShowInput(true)}\r\n                    >\r\n                        <div style={{ fontSize: '14px', opacity: 0.8, textAlign: 'center', marginTop: '35px' }}>\r\n                            Create new board\r\n                        </div>\r\n                    </div>}\r\n\r\n                    {showInput &&\r\n                        <div className={classes.card}\r\n                            style={{\r\n                                opacity: '1',\r\n                            }}\r\n                        >\r\n                            <InputCard\r\n                                value={boardTitle}\r\n                                changedHandler={handleChange}\r\n                                itemAdded={submitHandler}\r\n                                closeHandler={() => {\r\n                                    setShowInput(false)\r\n                                    setBoardTitle('')\r\n                                }}\r\n                                placeholder='Add board title'\r\n                                btnText='Create'\r\n                                type='list'\r\n                                width='120px'\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div >\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Boards from './components/Boards'\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Boards />\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport * as ACTIONS from '../actions'\r\n\r\nconst BASE_URL = `${process.env.REACT_APP_HOME_URL}/api/cards`\r\n\r\n\r\nexport const createNewCard = (params) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.POST_REQUEST_CARD })\r\n        axios.post(BASE_URL, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.ADD_CARD, payload: { card: res.data } })\r\n            }).catch(e => {\r\n                if (e.message === \"Network Error\")\r\n                    dispatch({ type: ACTIONS.ERROR_CARD, payload: { error: e.message } })\r\n                else if (e.response.status === 422)\r\n                    dispatch({ type: ACTIONS.VALIDATION_ERROR_CARD })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardById = (id, params) => {\r\n    return (dispatch) => {\r\n        axios.patch(BASE_URL + id, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.UPDATE_CARD, payload: { card: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_CARD, payload: { error: e.message } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardById = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete(BASE_URL + id)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.DELETE_CARD, payload: { card: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_CARD, payload: { error: e.message } })\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { Paper, makeStyles, InputBase, IconButton } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateCardById, deleteCardById } from '../actions/actionCreators/cardActions'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport { createNewActivity } from '../actions/actionCreators/activityActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        margin: theme.spacing(1),\r\n        width: '230px',\r\n        wordWrap: 'break-word',\r\n        '&:hover': {\r\n            backgroundColor: '#EBECF0'\r\n        }\r\n\r\n    },\r\n}))\r\n\r\nexport default function Card({ task, index }) {\r\n    const classes = useStyles()\r\n    const [editable, setEditable] = useState(false)\r\n    const [title, setTitle] = useState(task.name)\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <Draggable draggableId={task._id} index={index}>\r\n            {(provided) => (\r\n                <div\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    <Paper className={classes.card} onClick={() => {\r\n                        setEditable(true)\r\n                    }}>\r\n                        {editable ?\r\n                            (< InputBase\r\n                                onChange={(e) => {\r\n                                    e.preventDefault()\r\n                                    setTitle(e.target.value)\r\n                                }}\r\n                                multiline\r\n                                fullWidth\r\n                                value={title}\r\n                                style={{ minHeight: '7px' }}\r\n                                autoFocus\r\n                                onFocus={(e) => {\r\n                                    const val = e.target.value\r\n                                    e.target.value = ''\r\n                                    e.target.value = val\r\n                                }}\r\n                                onBlur={() => {\r\n                                    setEditable(false)\r\n                                    dispatch(updateCardById(task._id, { name: title }))\r\n                                }}\r\n                            />) :\r\n                            (<div style={{ display: 'flex', position: 'relative' }}>\r\n                                <div>\r\n                                    {task.name}\r\n                                </div>\r\n                                <IconButton\r\n                                    style={{ right: 0, position: 'absolute', marginTop: '-10px', zIndex: '100' }}\r\n                                    onClick={() => {\r\n                                        dispatch(deleteCardById(task._id))\r\n                                        const text = `User deleted card ${task.name}`\r\n                                        dispatch(createNewActivity({ text, boardId: task.boardId }))\r\n                                    }}\r\n                                >\r\n                                    <DeleteForeverIcon fontSize='small' />\r\n                                </IconButton>\r\n                            </div>\r\n                            )\r\n                        }\r\n                    </ Paper>\r\n                </div>\r\n            )\r\n            }\r\n        </Draggable >\r\n    )\r\n}\r\n","export default function midString(prev, next) {\r\n    var p, n, pos, str\r\n    for (pos = 0; p === n; pos++) {               // find leftmost non-matching character\r\n        p = pos < prev.length ? prev.charCodeAt(pos) : 96\r\n        n = pos < next.length ? next.charCodeAt(pos) : 123\r\n    }\r\n    str = prev.slice(0, pos - 1)                 // copy identical part of string\r\n    if (p === 96) {                               // prev string equals beginning of next\r\n        while (n === 97) {                        // next character is 'a'\r\n            n = pos < next.length ? next.charCodeAt(pos++) : 123   // get char from next\r\n            str += 'a'                           // insert an 'a' to match the 'a'\r\n        }\r\n        if (n === 98) {                           // next character is 'b'\r\n            str += 'a'                           // insert an 'a' to match the 'b'\r\n            n = 123                              // set to end of alphabet\r\n        }\r\n    }\r\n    else if (p + 1 === n) {                       // found consecutive characters\r\n        str += String.fromCharCode(p)            // insert character from prev\r\n        n = 123                                  // set to end of alphabet\r\n        while ((p = pos < prev.length ? prev.charCodeAt(pos++) : 96) === 122) {  // p='z'\r\n            str += 'z'                           // insert 'z' to match 'z'\r\n        }\r\n    }\r\n    return str + String.fromCharCode(Math.ceil((p + n) / 2))  // append middle character\r\n}","import React from 'react'\r\nimport { makeStyles, Button } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    add: {\r\n        textTransform: 'none',\r\n        margin: theme.spacing(0.2, 1, 1, 1),\r\n        justifyContent: 'left',\r\n        opacity: 0.8,\r\n        fontWeight: props => props.type === 'background' ? 'bold' : 'inherit',\r\n        backgroundColor: props => props.type !== 'card' ? 'hsla(0,0%,100%,.24)' : 'inherit',\r\n        // color: props => props.type !== 'card' ? 'white' : 'inherit',\r\n        '&:hover': {\r\n            opacity: 1,\r\n            backgroundColor: 'rgba(9,30,66,.08)',\r\n        },\r\n    },\r\n    width: props => ({\r\n        width: props.width,\r\n        color: props.color\r\n    }),\r\n}))\r\n\r\nexport default function AddItem({ btnText, handleClick, type, icon, width, color }) {\r\n    const classes = useStyles({ type, width, color })\r\n    return (\r\n        <Button className={`${classes.add} ${classes.width}`}\r\n            onClick={handleClick}>\r\n            {icon} {btnText}\r\n        </Button>\r\n\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport * as ACTIONS from '../actions'\r\n\r\nconst BASE_URL = `${process.env.REACT_APP_HOME_URL}/api/lists/`\r\n\r\nexport const createNewList = (params) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: ACTIONS.POST_REQUEST_LIST })\r\n        axios.post(BASE_URL, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.ADD_LIST, payload: { list: res.data } })\r\n            }).catch(e => {\r\n                if (e.message === \"Network Error\")\r\n                    dispatch({ type: ACTIONS.ERROR_LIST, payload: { error: e } })\r\n                else if (e.response.status === 422)\r\n                    dispatch({ type: ACTIONS.VALIDATION_ERROR_LIST })\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateListById = (id, params) => {\r\n    return (dispatch) => {\r\n        axios.patch(BASE_URL + id, params)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.UPDATE_LIST, payload: { list: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_LIST, payload: { error: e } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteListById = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete(BASE_URL + id)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.DELETE_LIST, payload: { list: res.data } })\r\n            }).catch(e => {\r\n                dispatch({ type: ACTIONS.ERROR_LIST, payload: { error: e.message } })\r\n            })\r\n    }\r\n}","import React, { useState, useRef } from 'react'\r\nimport Card from './Card'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport InputCard from './InputCard'\r\nimport { createNewCard } from '../actions/actionCreators/cardActions'\r\nimport { useDispatch } from 'react-redux'\r\nimport midString from '../ordering/ordering'\r\nimport { createNewActivity } from '../actions/actionCreators/activityActions'\r\nimport { Paper, makeStyles, InputBase, IconButton } from '@material-ui/core'\r\nimport AddItem from './AddItem'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { updateListById, deleteListById } from '../actions/actionCreators/listActions'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '272px',\r\n        backgroundColor: '#EBECF0',\r\n        marginLeft: theme.spacing(1),\r\n        wordWrap: 'break-word',\r\n    },\r\n    scroll: {\r\n        maxHeight: '500px',\r\n        overflow: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    title: {\r\n        padding: theme.spacing(1, 1, 1, 1),\r\n        minWidth: '100px',\r\n        marginLeft: theme.spacing(1.5),\r\n        fontWeight: 'bold',\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(11.5)\r\n    },\r\n    editable: {\r\n        marginLeft: theme.spacing(-1),\r\n        wordWrap: 'break-word',\r\n        padding: theme.spacing(0, 1, 0, 1),\r\n        boxShadow: 'inset 0 0 0 2px #0079bf',\r\n        width: '210px',\r\n        borderRadius: 4,\r\n    }\r\n}))\r\n\r\nexport default function Column({ column, tasks, index }) {\r\n    const classes = useStyles()\r\n    const [cardTitle, setCardTitle] = useState('')\r\n    const [listTitle, setListTitle] = useState(column.name)\r\n    const [addCardFlag, setAddCardFlag] = useState(false)\r\n    const [editable, setEditable] = useState(false)\r\n    var addFlag = useRef(true)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        setCardTitle(e.target.value)\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        if (cardTitle === '')\r\n            return\r\n        const totalTasks = tasks.length\r\n        const postCardReq = {\r\n            name: cardTitle,\r\n            boardId: column.boardId,\r\n            listId: column._id,\r\n            order: totalTasks === 0 ? 'n' : midString(tasks[totalTasks - 1].order, '')\r\n        }\r\n        dispatch(createNewCard(postCardReq))\r\n        dispatch(createNewActivity({\r\n            text: `User added ${cardTitle} to ${column.name}`,\r\n            boardId: column.boardId\r\n        }))\r\n        setCardTitle('')\r\n        setAddCardFlag(true)\r\n    }\r\n    const handleAddition = () => {\r\n        setAddCardFlag(true)\r\n        addFlag.current = false\r\n    }\r\n    const closeButtonHandler = () => {\r\n        setAddCardFlag(false)\r\n        addFlag.current = true\r\n        setCardTitle('')\r\n    }\r\n    const changedHandler = (e) => {\r\n        e.preventDefault()\r\n        setListTitle(e.target.value)\r\n    }\r\n    const updateListTitle = () => {\r\n        dispatch(updateListById(column._id, { name: listTitle }))\r\n        setEditable(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Draggable draggableId={column._id} index={index}>\r\n                {(provided) => (\r\n                    <div {...provided.draggableProps}\r\n                        ref={provided.innerRef}>\r\n                        <Paper elevation={0}\r\n                            className={classes.root}\r\n                            {...provided.dragHandleProps}>\r\n                            <div className={classes.title} onClick={() => setEditable(true)} >\r\n                                {!editable &&\r\n                                    <div style={{ display: 'flex', position: 'relative' }}>\r\n                                        <div>\r\n                                            {column.name}\r\n                                        </div>\r\n                                        <IconButton\r\n                                            style={{ right: 0, position: 'absolute', marginTop: '-10px', zIndex: '100' }}\r\n                                            onClick={() => {\r\n                                                dispatch(deleteListById(column._id))\r\n                                                const text = `User deleted list ${column.name}`\r\n                                                dispatch(createNewActivity({ text, boardId: column.boardId }))\r\n                                            }}\r\n                                        >\r\n                                            <DeleteIcon fontSize='small' />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                }\r\n                                {editable &&\r\n                                    <div className={classes.editable}>\r\n                                        < InputBase\r\n                                            onChange={changedHandler}\r\n                                            multiline\r\n                                            fullWidth\r\n                                            value={listTitle}\r\n                                            style={{ fontWeight: 'bold' }}\r\n                                            autoFocus\r\n                                            onFocus={(e) => {\r\n                                                const val = e.target.value\r\n                                                e.target.value = ''\r\n                                                e.target.value = val\r\n                                            }}\r\n                                            onBlur={updateListTitle}\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <Droppable\r\n                                droppableId={column._id} type='card'>\r\n                                {(provided) => (\r\n                                    <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        <div className={classes.scroll}>\r\n                                            {tasks.map((task, index) =>\r\n                                                <Card key={task._id} task={task} index={index} />)}\r\n                                            {addCardFlag &&\r\n                                                <InputCard\r\n                                                    value={cardTitle}\r\n                                                    changedHandler={handleChange}\r\n                                                    itemAdded={submitHandler}\r\n                                                    closeHandler={closeButtonHandler}\r\n                                                    type='card'\r\n                                                    btnText='Add Card'\r\n                                                    placeholder='Enter a title for this card...'\r\n                                                    width='230px'\r\n                                                />\r\n                                            }\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                        {addFlag.current &&\r\n                                            <AddItem handleClick={handleAddition} icon={<AddIcon />}\r\n                                                btnText='Add another card' type='card' width='256px' />\r\n                                        }\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                        </Paper>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        position: 'fixed',\r\n        width: '1405px',\r\n        overflow: 'hidden',\r\n        opacity: 0.8,\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        padding: theme.spacing(0.7, 0.7, 0.7, 0.7),\r\n        margin: theme.spacing(0.7, 0.7, 0.7, 0.7),\r\n        fontFamily: 'sans-serif',\r\n        fontSize: '20px',\r\n        marginTop: theme.spacing(6.5),\r\n        '&:hover': {\r\n            opacity: 1,\r\n            backgroundColor: 'hsla(0,0%,100%,.24)',\r\n            borderRadius: 4\r\n            // opacity: 0.5\r\n        }\r\n    }\r\n}))\r\nexport default function BoardHeader({ title, showEditable }) {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.container} >\r\n            <div className={classes.title} onClick={showEditable}>\r\n                {title}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        fontFamily: 'Arial, Helvetica, sans-serif',\r\n        marginBottom: theme.spacing(25),\r\n        paddingTop: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n    },\r\n    text: {\r\n        fontSize: '15px'\r\n    },\r\n    timestamp: {\r\n        fontSize: '10px',\r\n        marginTop: theme.spacing(0.5),\r\n        color: '#637187'\r\n    }\r\n}))\r\n\r\nexport default function Activities() {\r\n    const classes = useStyles()\r\n    // eslint-disable-next-line\r\n    const [dt, setDt] = useState(new Date().toLocaleString());\r\n    const { activities } = useSelector(state => state.activities)\r\n\r\n    useEffect(() => {\r\n        let secTimer = setInterval(() => {\r\n            setDt(new Date().toLocaleString())\r\n        }, 60000)\r\n        return () => clearInterval(secTimer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {\r\n                activities.map((intialActivity, index) => {\r\n                    const activity = activities[activities.length - 1 - index]\r\n                    const date = new Date(activity.createdAt)\r\n                    const str = moment(date).fromNow();\r\n                    var timestampString\r\n                    const userName = activity.text.split(' ')[0]\r\n                    const activityText = activity.text.replace(userName, '')\r\n                    if (str.includes('second') || str.includes('minute') || str.includes('hour'))\r\n                        timestampString = str\r\n                    else if (str.includes('day') && (str.split(' ')[0] === 'a' || str.split(' ')[0] < 7)) {\r\n                        if (str === 'a day ago') {\r\n                            const timeString = moment().subtract(1, 'days').calendar().split(' at ')[0]\r\n                            timestampString = timeString + ' at ' + moment(date).format('LT')\r\n                        }\r\n                        else {\r\n                            const timeString = moment().subtract(str.split(' ')[0], 'days').calendar().split(' at ')[0]\r\n                            timestampString = timeString + ' at ' + moment(date).format('LT')\r\n                        }\r\n                    }\r\n                    else\r\n                        timestampString = moment(date).format('LLL')\r\n                    return (<div key={activity._id} className={classes.text}>\r\n                        <strong>{userName}</strong>{activityText}\r\n                        <p className={classes.timestamp} >{timestampString}</p>\r\n                    </div>)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    hr: {\r\n        backgroundColor: 'rgba(9,30,66,.13)',\r\n        border: theme.spacing(0),\r\n        height: theme.spacing(0.1),\r\n        margin: theme.spacing(0,0,3,0),\r\n        padding: theme.spacing(0),\r\n        width: '100%',\r\n    }\r\n}))\r\nexport default function Hr() {\r\n    const classes = useStyles()\r\n    return (\r\n        <hr className={classes.hr} />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IconButton, makeStyles } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        fontWeight: 'bold',\r\n        marginLeft: props => props.type ? theme.spacing(17) : theme.spacing(8),\r\n        paddingRight: props => props.type ? theme.spacing(13) : theme.spacing(7),\r\n    },\r\n    close: {\r\n        marginTop: theme.spacing(-1.3)\r\n    }\r\n}))\r\n\r\nexport default function MenuHeader({ text, closeHandler, type }) {\r\n    const classes = useStyles({ type })\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div className={classes.title}>\r\n                {text}\r\n            </div>\r\n            <IconButton onClick={closeHandler}\r\n                className={classes.close}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport * as ACTIONS from '../actions'\r\n\r\nconst page = Math.floor(Math.random() * 100) + 1\r\nconst query = 'landscape'\r\nconst BASE_URL = `https://api.unsplash.com/search/photos?page=${page}&query=${query}&client_id=${process.env.REACT_APP_CLIENT_KEY}`\r\n\r\nexport const fetchImages = () => {\r\n    return (dispatch) => {\r\n        axios.get(BASE_URL)\r\n            .then(res => {\r\n                dispatch({ type: ACTIONS.GET_URLS, payload: { images: res.data.results } })\r\n            })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles, Paper } from '@material-ui/core'\r\nimport Hr from './Hr'\r\nimport MenuHeader from './MenuHeader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchImages } from '../actions/actionCreators/imageActions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#EBECF0',\r\n        width: '321px',\r\n        float: 'right',\r\n        height: '100vh',\r\n        right: theme.spacing(0),\r\n        top: theme.spacing(5.63),\r\n        borderRadius: theme.spacing(0),\r\n        position: 'fixed',\r\n        padding: theme.spacing(1),\r\n        zIndex: '1200',\r\n    },\r\n    card: {\r\n        height: '90px',\r\n        width: '45%',\r\n        margin: theme.spacing(0.7),\r\n        borderRadius: theme.spacing(1),\r\n        '&:hover': {\r\n            opacity: 0.7,\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    menuContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    }\r\n}))\r\n\r\nconst colors = ['rgb(0, 121, 191)', 'rgb(210, 144, 52)', 'rgb(81, 152, 57)',\r\n    'rgb(176, 70, 50)', 'rgb(137, 96, 158)', 'rgb(205, 90, 145)',\r\n    'rgb(75, 191, 107)', 'rgb(0, 174, 204)', 'rgb(131, 140, 145)']\r\nexport default function Background({ closeHandler, setColorBackground }) {\r\n    const classes = useStyles()\r\n    const [showColor, setShowColor] = useState(false)\r\n    const [showImage, setShowImage] = useState(false)\r\n    const { images } = useSelector(state => state.images)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchImages())\r\n    }, [dispatch])\r\n    return (\r\n        <Paper className={classes.container}>\r\n            <MenuHeader text='Change Background' closeHandler={closeHandler} />\r\n            <Hr />\r\n            <div className={classes.menuContainer} >\r\n                <div className={classes.card}\r\n                    style={{\r\n                        backgroundImage: `url('https://a.trellocdn.com/prgb/dist/images/photos-thumbnail@3x.48948499e309aef794d7.jpg')`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                    }}\r\n                    onClick={() => {\r\n                        setShowColor(false)\r\n                        setShowImage(true)\r\n                    }} />\r\n                <div className={classes.card}\r\n                    style={{\r\n                        backgroundImage: `url('https://a.trellocdn.com/prgb/dist/images/colors@2x.864f4df15d825e89e199.jpg')`,\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                    }}\r\n                    onClick={() => {\r\n                        setShowColor(true)\r\n                        setShowImage(false)\r\n                    }} />\r\n            </div>\r\n            {showColor &&\r\n                <div className={classes.menuContainer}>\r\n                    {colors.map(color => {\r\n                        return (<div className={classes.card}\r\n                            key={color}\r\n                            style={{ backgroundColor: color }}\r\n                            onClick={setColorBackground.bind(null, color)}\r\n                        />)\r\n                    })}\r\n                </div>\r\n            }\r\n            {showImage &&\r\n                <div className={classes.menuContainer}>\r\n                    {images.map((image, index) => {\r\n                        return (<div className={classes.card}\r\n                            key={index}\r\n                            style={{ backgroundImage: `url(${image.thumb})`, positon: 'relative' }}\r\n                            onClick={setColorBackground.bind(null, image)}\r\n                        >\r\n                            <span style={{\r\n                                position: 'absolute',\r\n                                wordWrap: 'break-word',\r\n                                overflow: 'hidden',\r\n                                width: '100px',\r\n                                marginTop: '68px',\r\n                                marginRight: '10px',\r\n                                textDecoration: 'underline',\r\n                                lineHeight: '1.5em',\r\n                                height: '1.5em',\r\n                            }}>\r\n                                <a style={{ display: 'block', textDecoration: 'none', color: 'white' }}\r\n                                    href={image.user.link} target='blank'>{image.user.username}</a>\r\n\r\n                            </span>\r\n                        </div>)\r\n                    })}\r\n                </div>}\r\n        </Paper >\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Paper, makeStyles } from '@material-ui/core'\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport AddItem from './AddItem'\r\nimport Activities from './Activities'\r\nimport Hr from './Hr'\r\nimport MenuHeader from './MenuHeader'\r\nimport Background from './Background'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteBoardById } from '../actions/actionCreators/boardActions'\r\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep'\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#F4F5F7',\r\n        width: '321px',\r\n        float: 'right',\r\n        height: '100vh',\r\n        right: props => props.showMenu === false ? theme.spacing(-100) : theme.spacing(0),\r\n        top: theme.spacing(5.63),\r\n        borderRadius: theme.spacing(0),\r\n        position: 'fixed',\r\n        padding: theme.spacing(1),\r\n        wordWrap: 'break-word',\r\n        zIndex: '1200',\r\n        transition: 'right 0.7s ease-out'\r\n    },\r\n    scroll: {\r\n        overflow: 'auto',\r\n        height: '95vh'\r\n    },\r\n    menu: {\r\n        top: theme.spacing(5.63),\r\n        position: 'fixed',\r\n        right: theme.spacing(0),\r\n        marginTop: theme.spacing(0.5)\r\n    },\r\n}))\r\nexport default function SideMenu({ setBackground, board }) {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n    const [showBackground, setShowBackground] = useState(false)\r\n    const classes = useStyles({ showMenu })\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <>\r\n            <div className={classes.menu}>\r\n                <AddItem btnText='Show Menu' handleClick={() => (setShowMenu(true))} icon={<MoreHorizIcon />} type='menu' width='120px' />\r\n            </div>\r\n            {!showBackground &&\r\n                <Paper className={classes.container} elevation={1} variant='outlined' >\r\n                    <MenuHeader text='Menu' closeHandler={() => (setShowMenu(false))} type='menu' />\r\n                    <Hr />\r\n                    <AddItem btnText='Change Background'\r\n                        handleClick={() => (setShowBackground(true))}\r\n                        type='background' width='310px'\r\n                        icon={<span style={{\r\n                            marginRight: '13px',\r\n                            backgroundColor: `${board.color}`,\r\n                            backgroundImage: `url(${board.url})`,\r\n                            backgroundSize: 'cover',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            width: '20px',\r\n                            height: '20px',\r\n                            borderRadius: '2px'\r\n                        }} ></span>}\r\n                    />\r\n                    <AddItem btnText='  Delete Board'\r\n                        handleClick={() => {\r\n                            dispatch(deleteBoardById(board.id))\r\n                            window.location.href = process.env.REACT_APP_HOME_URL\r\n                        }}\r\n                        type='background' width='310px'\r\n                        icon={<DeleteSweepIcon style={{ marginRight: '10px' }} />} />\r\n                    <div style={{ display: 'flex', marginTop: '20px' }}>\r\n                        <AccountTreeIcon fontSize='small'\r\n                            style={{ paddingLeft: '20px', color: '#172B4D', opacity: '0.8' }} />\r\n                        <div style={{ paddingLeft: '10px', paddingBottom: '10px', fontWeight: 'bold', fontSize: '15px', color: '#172B4D', opacity: '0.9' }}>Activity</div>\r\n                    </div>\r\n                    <div className={classes.scroll}>\r\n                        <Activities />\r\n                    </div>\r\n                </Paper >\r\n            }\r\n            <div  >\r\n                {showBackground && <Background closeHandler={() => (setShowBackground(false))} setColorBackground={setBackground} />}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchBoardById, fetchListsFromBoard, fetchsCardsFromBoard, fetchActivitiesFromBoard, updateBoardById }\r\n    from '../actions/actionCreators/boardActions'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport List from './List'\r\nimport _ from 'lodash'\r\nimport { makeStyles, InputBase } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport midString from '../ordering/ordering'\r\nimport { updateCardById } from '../actions/actionCreators/cardActions'\r\nimport { createNewList, updateListById } from '../actions/actionCreators/listActions'\r\nimport InputCard from './InputCard'\r\nimport { createNewActivity, deleteActivityById } from '../actions/actionCreators/activityActions'\r\nimport moment from 'moment'\r\nimport AddItem from './AddItem'\r\nimport Header from './Header'\r\nimport BoardHeader from './BoardHeader'\r\nimport SideMenu from './SideMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: '100vh',\r\n        overflowY: 'auto',\r\n    },\r\n    listContainer: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        width: '100%',\r\n        marginTop: theme.spacing(0.5)\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(11.5)\r\n    },\r\n    editable: {\r\n        marginLeft: theme.spacing(1),\r\n        height: '38px',\r\n        padding: theme.spacing(0, 1, 0, 1),\r\n        boxShadow: 'inset 0 0 0 2px #0079bf',\r\n        borderRadius: 6,\r\n        backgroundColor: '#EBECF0',\r\n        width: '290px',\r\n        position: 'fixed',\r\n        marginTop: theme.spacing(6.5)\r\n    }\r\n\r\n}))\r\n\r\nexport default function Board() {\r\n    const classes = useStyles()\r\n    var { id, name } = useParams()\r\n    const { loading, currBoard } = useSelector(state => state.boards)\r\n    const { listLoading, lists } = useSelector(state => state.lists)\r\n    const { cardLoading, cards } = useSelector(state => state.cards)\r\n    const { activities } = useSelector(state => state.activities)\r\n    const [initialData, setInitialData] = useState({})\r\n    const [initDone, setInitDone] = useState(false)\r\n    var addFlag = useRef(true)\r\n    const [addListFlag, setAddListFlag] = useState(false)\r\n    const [listTitle, setListTitle] = useState('')\r\n    const [color, setColor] = useState('white')\r\n    const [url, setUrl] = useState('')\r\n    const [editable, setEditable] = useState(false)\r\n    const [boardTitle, setBoardTitle] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    if (!loading && name !== currBoard.name && currBoard.name !== undefined)\r\n        name = currBoard.name\r\n    else if (name === undefined)\r\n        name = ''\r\n\r\n    useEffect(() => {\r\n        if (id.length === 24) {\r\n            dispatch(fetchBoardById(id))\r\n            dispatch(fetchListsFromBoard(id))\r\n            dispatch(fetchsCardsFromBoard(id))\r\n            dispatch(fetchActivitiesFromBoard(id))\r\n        }\r\n    }, [dispatch, id])\r\n\r\n    useEffect(() => {\r\n        if (!_.isEmpty(currBoard)) {\r\n            setColor(currBoard.image.color)\r\n            setUrl(currBoard.image.full)\r\n            setBoardTitle(currBoard.name)\r\n            document.title = `${currBoard.name} | Trellis`\r\n        }\r\n    }, [currBoard])\r\n\r\n    useEffect(() => {\r\n        if (!listLoading && !cardLoading) {\r\n            const prevState = { tasks: {}, columns: {}, columnOrder: [] }\r\n            const getTaskIds = (id) => {\r\n                const filteredTasks = _.filter(cards, { listId: id })\r\n                const sortedTasks = _.orderBy(filteredTasks, ['order'], ['asc'])\r\n                const taskIds = []\r\n                sortedTasks.forEach(task => taskIds.push(task._id))\r\n                return taskIds\r\n            }\r\n\r\n            const setContent = () => {\r\n                cards.forEach(card => (\r\n                    prevState.tasks[card._id] = card\r\n                ))\r\n                const sortedLists = _.orderBy(lists, ['order'], ['asc'])\r\n                sortedLists.forEach(list => {\r\n                    prevState.columns[list._id] = { ...list, taskIds: getTaskIds(list._id) }\r\n                    prevState.columnOrder.push(list._id)\r\n                })\r\n            }\r\n            setContent()\r\n            setInitialData({ ...prevState })\r\n            setInitDone(true)\r\n        }\r\n    }, [setInitDone, listLoading, cardLoading, setInitialData, cards, lists])\r\n\r\n    const onDragEnd = (result) => {\r\n        console.log(result)\r\n        var newOrder\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination)\r\n            return\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index)\r\n            return\r\n\r\n        if (type === 'list') {\r\n            const listOrder = initialData.columnOrder\r\n            if (destination.index === 0) {\r\n                newOrder = midString('', initialData.columns[listOrder[0]].order)\r\n            }\r\n            else if (destination.index === listOrder.length - 1) {\r\n                newOrder = midString(initialData.columns[listOrder[destination.index]].order, '')\r\n            }\r\n            else {\r\n                if (destination.index < source.index) {\r\n                    newOrder = midString(initialData.columns[listOrder[destination.index - 1]].order,\r\n                        initialData.columns[listOrder[destination.index]].order)\r\n                }\r\n                else {\r\n                    newOrder = midString(initialData.columns[listOrder[destination.index]].order,\r\n                        initialData.columns[listOrder[destination.index + 1]].order)\r\n                }\r\n            }\r\n            dispatch(updateListById(draggableId, { order: newOrder }))\r\n            const newListOrder = Array.from(initialData.columnOrder)\r\n            const destinationColumn = initialData.columns[draggableId]\r\n            destinationColumn.order = newOrder\r\n            newListOrder.splice(source.index, 1)\r\n            newListOrder.splice(destination.index, 0, draggableId)\r\n            const newData = {\r\n                ...initialData,\r\n                columnOrder: newListOrder,\r\n                columns: {\r\n                    ...initialData.columns,\r\n                    draggableId: destinationColumn\r\n                }\r\n            }\r\n            setInitialData(newData)\r\n            return\r\n        }\r\n        const startList = initialData.columns[source.droppableId]\r\n        const endList = initialData.columns[destination.droppableId]\r\n\r\n        if (startList === endList) {\r\n            const column = startList\r\n            if (destination.index === 0)\r\n                newOrder = midString('', initialData.tasks[column.taskIds[0]].order)\r\n            else if (destination.index === column.taskIds.length - 1)\r\n                newOrder = midString(initialData.tasks[column.taskIds[destination.index]].order, '')\r\n            else {\r\n                if (destination.index < source.index)\r\n                    newOrder = midString(initialData.tasks[column.taskIds[destination.index - 1]].order,\r\n                        initialData.tasks[column.taskIds[destination.index]].order)\r\n                else\r\n                    newOrder = midString(initialData.tasks[column.taskIds[destination.index]].order,\r\n                        initialData.tasks[column.taskIds[destination.index + 1]].order)\r\n            }\r\n\r\n            dispatch(updateCardById(draggableId, { order: newOrder }))\r\n            const newTaskIds = Array.from(column.taskIds)\r\n            newTaskIds.splice(source.index, 1)\r\n            newTaskIds.splice(destination.index, 0, draggableId)\r\n            const destinationTask = initialData.tasks[draggableId]\r\n            destinationTask.order = newOrder\r\n            const newColumn = {\r\n                ...column,\r\n                taskIds: newTaskIds\r\n            }\r\n            const newData = {\r\n                ...initialData,\r\n                columns: {\r\n                    ...initialData.columns,\r\n                    [newColumn._id]: newColumn\r\n                },\r\n                tasks: {\r\n                    ...initialData.tasks,\r\n                    draggableId: destinationTask\r\n                }\r\n            }\r\n            setInitialData(newData)\r\n            return\r\n        }\r\n\r\n        // Move from one list to another\r\n        if (endList.taskIds.length === 0)\r\n            newOrder = 'n'\r\n        else {\r\n            if (destination.index === 0) {\r\n                newOrder = midString('', initialData.tasks[endList.taskIds[0]].order)\r\n            }\r\n            else if (destination.index === endList.taskIds.length)\r\n                newOrder = midString(initialData.tasks[endList.taskIds[destination.index - 1]].order, '')\r\n            else\r\n                newOrder = midString(initialData.tasks[endList.taskIds[destination.index - 1]].order,\r\n                    initialData.tasks[endList.taskIds[destination.index]].order)\r\n        }\r\n        dispatch(updateCardById(draggableId, { order: newOrder, listId: endList._id }))\r\n        const text = `User moved ${initialData.tasks[draggableId].name} from ${startList.name} to ${endList.name}`\r\n        const recentActivity = activities[activities.length - 1]\r\n        if (recentActivity.text === `User moved ${initialData.tasks[draggableId].name} from ${endList.name} to ${startList.name}` &&\r\n            moment(recentActivity.createdAt).fromNow().includes('second')) {\r\n            dispatch(deleteActivityById(recentActivity._id))\r\n        }\r\n        else\r\n            dispatch(createNewActivity({ text, boardId: currBoard._id }))\r\n\r\n        const startTaskIds = Array.from(startList.taskIds)\r\n        startTaskIds.splice(source.index, 1)\r\n        const newStartList = {\r\n            ...startList,\r\n            taskIds: startTaskIds\r\n        }\r\n        const destinationTask = initialData.tasks[draggableId]\r\n        destinationTask.order = newOrder\r\n        const endTaskIds = Array.from(endList.taskIds)\r\n        endTaskIds.splice(destination.index, 0, draggableId)\r\n        const newEndList = {\r\n            ...endList,\r\n            taskIds: endTaskIds\r\n        }\r\n        const newData = {\r\n            ...initialData,\r\n            columns: {\r\n                ...initialData.columns,\r\n                [newStartList._id]: newStartList,\r\n                [newEndList._id]: newEndList\r\n            },\r\n            tasks: {\r\n                ...initialData.tasks,\r\n                draggableId: destinationTask\r\n            }\r\n        }\r\n        setInitialData(newData)\r\n    }\r\n\r\n    if (id.length < 24)\r\n        return (\r\n            <h1>Invalid URL</h1>\r\n        )\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        setListTitle(e.target.value)\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        if (listTitle === '')\r\n            return\r\n        const totalLists = initialData.columnOrder.length\r\n        const postListReq = {\r\n            name: listTitle,\r\n            boardId: currBoard._id,\r\n            order: totalLists === 0 ? 'n' : midString(\r\n                initialData.columns[initialData.columnOrder[totalLists - 1]].order, '')\r\n        }\r\n        dispatch(createNewList(postListReq))\r\n        dispatch(createNewActivity({\r\n            text: `User added ${listTitle} to this board`,\r\n            boardId: currBoard._id\r\n        }))\r\n        setListTitle('')\r\n    }\r\n\r\n    const closeButtonHandler = () => {\r\n        setAddListFlag(false)\r\n        addFlag.current = true\r\n        setListTitle('')\r\n    }\r\n\r\n    const handleAddition = () => {\r\n        setAddListFlag(true)\r\n        addFlag.current = false\r\n    }\r\n    const setBackground = (background) => {\r\n        if (background.thumb) {\r\n            setUrl(background.full)\r\n            setColor('white')\r\n            dispatch(updateBoardById(currBoard._id,\r\n                {\r\n                    image: {\r\n                        full: background.full,\r\n                        thumb: background.thumb,\r\n                        color: 'white'\r\n                    }\r\n                }))\r\n        }\r\n        else {\r\n            setColor(background)\r\n            setUrl('')\r\n            dispatch(updateBoardById(currBoard._id,\r\n                {\r\n                    image: {\r\n                        full: '',\r\n                        thumb: '',\r\n                        color: background\r\n                    }\r\n                }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}\r\n            style={{\r\n                backgroundColor: `${color}`,\r\n                backgroundImage: `url(${url})`,\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat',\r\n            }}\r\n        >\r\n            <Redirect to={`/b/${id}/${name}`} />\r\n            <Header />\r\n            {editable ? (\r\n                <div className={classes.editable}>\r\n                    <InputBase\r\n                        onChange={(e) => {\r\n                            e.preventDefault()\r\n                            setBoardTitle(e.target.value)\r\n                        }}\r\n                        fullWidth\r\n                        value={boardTitle}\r\n                        style={{\r\n                            fontWeight: 'bold', fontFamily: 'sans-serif',\r\n                            fontSize: '20px'\r\n                        }}\r\n                        autoFocus\r\n                        onFocus={(e) => {\r\n                            const val = e.target.value\r\n                            e.target.value = ''\r\n                            e.target.value = val\r\n                        }}\r\n                        onBlur={() => {\r\n                            setEditable(false)\r\n                            dispatch(updateBoardById(id, { name: boardTitle }))\r\n                        }}\r\n                    />\r\n                </div>) : (<BoardHeader title={currBoard.name} showEditable={() => setEditable(true)} />)\r\n            }\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId='all-columns' direction='horizontal' type='list'>\r\n                    {provided => (\r\n                        <div className={classes.listContainer}\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {initDone && initialData.columnOrder.map((columnId, index) => {\r\n                                const column = initialData.columns[columnId]\r\n                                const tasks = column.taskIds.map(taskId => initialData.tasks[taskId])\r\n                                return <List key={column._id} column={column}\r\n                                    tasks={tasks} index={index} />\r\n                            })}\r\n                            <div className={classes.wrapper}>\r\n                                {addFlag.current &&\r\n                                    <AddItem handleClick={handleAddition}\r\n                                        btnText='Add another list' type='list' icon={<AddIcon />} width='256px' color='white' />}\r\n                                {addListFlag &&\r\n                                    <InputCard\r\n                                        value={listTitle}\r\n                                        changedHandler={handleChange}\r\n                                        itemAdded={submitHandler}\r\n                                        closeHandler={closeButtonHandler}\r\n                                        type='list'\r\n                                        btnText='Add List'\r\n                                        placeholder='Enter list title...'\r\n                                        width='230px'\r\n                                        marginLeft='1'\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n            <SideMenu setBackground={setBackground} board={{ id, color, url }} />\r\n        </div >\r\n    )\r\n}","import { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport App from '../App';\r\nimport React from 'react'\r\nimport Board from '../components/Board'\r\n\r\nconst NotFound = () => {\r\n    return (<h1>404, Page Not Found</h1>)\r\n}\r\n\r\nconst AppRouter = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path='/' exact component={App} />\r\n            <Route path='/b/:id/:name?'>\r\n                <Board />\r\n            </Route>\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n\r\n)\r\n\r\n\r\nexport default AppRouter","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/configureStore'\r\nimport AppRouter from './routers/AppRouter';\r\nimport './index.css';\r\n\r\nconst JSX = (\r\n  <Provider store={store}>\r\n    <AppRouter /> \r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {JSX}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}